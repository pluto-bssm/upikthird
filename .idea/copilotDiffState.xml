<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/app/token-initializer.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/token-initializer.tsx" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useEffect } from &quot;react&quot;;&#10;import { TOKEN } from &quot;@/constants/common/constant&quot;;&#10;import { Storage } from &quot;@/apis/storage/storage&quot;;&#10;&#10;export default function TokenInitializer() {&#10;  useEffect(() =&gt; {&#10;    const getCookie = (name: string) =&gt; {&#10;      if (typeof document === &quot;undefined&quot;) return null;&#10;      const value = `; ${document.cookie}`;&#10;      const parts = value.split(`; ${name}=`);&#10;      if (parts.length === 2) return parts.pop()?.split(&quot;;&quot;).shift();&#10;      return null;&#10;    };&#10;&#10;    const clearCookie = (name: string) =&gt; {&#10;      if (typeof document === &quot;undefined&quot;) return;&#10;      document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;&#10;    };&#10;&#10;    try {&#10;      const accessToken = getCookie(&quot;accessToken&quot;);&#10;      const refreshToken = getCookie(&quot;refreshToken&quot;);&#10;&#10;      console.log(&quot;Token Initializer - Found Access Token:&quot;, !!accessToken);&#10;      console.log(&quot;Token Initializer - Found Refresh Token:&quot;, !!refreshToken);&#10;&#10;      if (accessToken) {&#10;        console.log(&quot;Saving access token to localStorage&quot;);&#10;        Storage.setItem(TOKEN.ACCESS, accessToken);&#10;        clearCookie(&quot;accessToken&quot;);&#10;      }&#10;&#10;      if (refreshToken) {&#10;        console.log(&quot;Saving refresh token to localStorage&quot;);&#10;        Storage.setItem(TOKEN.REFRESH, refreshToken);&#10;        clearCookie(&quot;refreshToken&quot;);&#10;      }&#10;&#10;      if (accessToken || refreshToken) {&#10;        console.log(&quot;Tokens saved successfully&quot;);&#10;        console.log(&quot;Access Token in storage:&quot;, Storage.getItem(TOKEN.ACCESS) ? &quot;✓&quot; : &quot;✗&quot;);&#10;        console.log(&quot;Refresh Token in storage:&quot;, Storage.getItem(TOKEN.REFRESH) ? &quot;✓&quot; : &quot;✗&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error in TokenInitializer:&quot;, error);&#10;    }&#10;  }, []);&#10;&#10;  return null;&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>